// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Path = require("path");
var $$Promise = require("@ryyppy/rescript-promise/src/Promise.bs.js");
var Process = require("process");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var MakeTexturesUtil = require("./MakeTexturesUtil.bs.js");

function checkSourceDirectory(sourceDirectory) {
  if (Fs.existsSync(sourceDirectory)) {
    return {
            TAG: /* Ok */0,
            _0: sourceDirectory
          };
  } else {
    return {
            TAG: /* Error */1,
            _0: "Source directory not found"
          };
  }
}

function makeTextures(id, sourceDirectory, outputDirectory) {
  $$Promise.$$catch(MakeTexturesUtil.makeTiledImages(id, sourceDirectory, outputDirectory, "Texture"), (function (error) {
          console.log(error);
          return Promise.resolve(undefined);
        }));
  
}

function showHelp(param) {
  console.log("Usage: npm run make-textures <textureId> <sourceDir>");
  
}

var argv = Process.argv;

var textureId = Belt_Array.get(argv, 2);

var sourceDirectory = Belt_Array.get(argv, 3);

var outputDirectory = Path.resolve(__dirname, "../../../src/textures");

if (textureId !== undefined && sourceDirectory !== undefined) {
  var reason = checkSourceDirectory(sourceDirectory);
  if (reason.TAG === /* Ok */0) {
    makeTextures(textureId, reason._0, outputDirectory);
  } else {
    console.log(reason._0);
  }
} else {
  console.log("Usage: npm run make-textures <textureId> <sourceDir>");
}

exports.checkSourceDirectory = checkSourceDirectory;
exports.makeTextures = makeTextures;
exports.showHelp = showHelp;
exports.argv = argv;
exports.textureId = textureId;
exports.sourceDirectory = sourceDirectory;
exports.outputDirectory = outputDirectory;
/* argv Not a pure module */
